info:
  contact: {}
paths:
  /example/ping:
    get:
      consumes:
      - application/json
      description: 無条件に"ping OK!"と返します。
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: ping疎通確認
      tags:
      - example
  /family/animals:
    get:
      consumes:
      - application/json
      description: すべての動物をMapとして取得します。
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: 動物全件取得
      tags:
      - family
  /family/animals/relations:
    get:
      consumes:
      - application/json
      description: すべての動物をリストとして返します。自身の親、子のリストをプロパティとしてそれぞれ持ちます。
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: 動物および親子関係全件取得
      tags:
      - family
  /family/children/{parentid}:
    get:
      consumes:
      - application/json
      description: あるノードについて、その子をすべて取得します。
      parameters:
      - description: 親の動物id
        in: path
        name: parentid
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: 子取得
      tags:
      - family
  /family/parents/{childId}:
    get:
      consumes:
      - application/json
      description: あるノードについて、その親をすべて取得します。
      parameters:
      - description: 子の動物ID
        in: path
        name: childId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: 親取得
      tags:
      - family
  /family/relations:
    get:
      consumes:
      - application/json
      description: すべての親子関係をMapとして取得します。
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: 親子関係全件取得
      tags:
      - family
  /picture/animal/profile/{animalId}:
    get:
      consumes:
      - application/json
      description: 特定の動物IDに紐づくプロフィール写真のバイナリデータとメタデータを取得します。
      parameters:
      - description: 動物ID
        in: path
        name: animalId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "404":
          description: No profile picture found
      summary: プロフィール写真取得
      tags:
      - picture
swagger: "2.0"
